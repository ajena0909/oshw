apiVersion: v1
items:
- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: "assign-pipeline-demo"
  spec:
    triggers:
          - github:
              secret: sHnkS7H6sN21Yvtozubn
            type: GitHub
          - generic:
              secret: kSqX-aFqHu7i2PMZpBPz
            type: Generic
    strategy:
      type: "JenkinsPipeline"
      jenkinsPipelineStrategy:
        jenkinsfile: |
                          node {
                              stage ("tasks-build : Build in tasks-build") {
                                    echo '********  Build Starting ******** '
                                    openshiftBuild bldCfg: 'openshift-tasks', buildName: '', checkForTriggeredDeployments: 'false', commitID: '', namespace: 'tasks-build', showBuildLogs: 'true', verbose: 'true'
                                    openshiftVerifyBuild bldCfg: 'openshift-tasks', checkForTriggeredDeployments: 'false', namespace: 'tasks-build', verbose: 'false'
                                    echo '********  Build Complete, create DEV tag: devready ******** '
                                    openshiftTag(srcStream: 'openshift-tasks', srcTag: 'latest', destStream: 'openshift-tasks', destTag: 'devready')
                              }
                              stage ('tasks-dev : Promote to DEV and Verify deployment in Development Env') {
                                    echo '********  Deployment Starting ******** '
                                    openshiftDeploy depCfg: 'openshift-tasks', namespace: 'tasks-dev', verbose: 'false', waitTime: ''
                                    openshiftVerifyDeployment depCfg: 'openshift-tasks', namespace: 'tasks-dev', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: ''
                                    echo '********  Deployment Complete ******** '
                                    
                                    echo '********  Service Verification Starting for DEV environment ******** '
                                    openshiftVerifyService namespace: 'tasks-dev', svcName: 'openshift-tasks', verbose: 'false'
                                    echo '********  Service Verification Complete ******** '
                                    openshiftTag(srcStream: 'openshift-tasks', srcTag: 'devready', destStream: 'openshift-tasks', destTag: 'testready')
      
                               }                               
                              stage ('tasks-test : Promote to Test and Verify deployment in Testing Env') {
                                    echo "********  Deploy testready build in tasks-test project  ******** "
                                    openshiftDeploy depCfg: 'openshift-tasks', namespace: 'tasks-test', verbose: 'false', waitTime: ''
                                    openshiftVerifyDeployment depCfg: 'openshift-tasks', namespace: 'tasks-test', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: ''
                                    echo '********  Deployment Complete in Test environment ******** '
                                    
                                    echo '********  Service Verification Starting ******** '
                                    openshiftVerifyService namespace: 'tasks-test', svcName: 'openshift-tasks', verbose: 'false'
                                    echo '********  Service Verification Complete ******** '       
                                    openshiftTag(srcStream: 'openshift-tasks', srcTag: 'testready', destStream: 'openshift-tasks', destTag: 'prodready')                                          
                               }   

                              stage ('tasks-prod : Promote to Production and Verify deployment') {
                                    echo "********  Deploy testready build in tasks-prod project  ******** "
                                    
                                    openshiftDeploy depCfg: 'openshift-tasks', namespace: 'tasks-prod', verbose: 'false', waitTime: ''
                                    openshiftVerifyDeployment depCfg: 'openshift-tasks', namespace: 'tasks-prod', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: ''
                                    echo '********  Deployment Complete in Prod environment ******** '
                                    
                                    echo '********  Service Verification Starting ******** '
                                    openshiftVerifyService namespace: 'tasks-prod', svcName: 'openshift-tasks', verbose: 'false'
                                    echo '********  Service Verification Complete in Prod environment ******** '                                   
      
                               }                               
                          }
kind: List
metadata: {}

